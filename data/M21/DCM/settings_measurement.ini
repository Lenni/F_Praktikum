#[frameCounter]
#bitWidth=8 #we do not use the wrap around here

[dieConfiguration]
inhibitFraction=0.2

[clock]
frequency_MHz=200

[recPars]
#number of hits to be processed if the --max-hits option is set (is not 100% accurate)
NumberHitsToProcess=5e9
#maximum number of ml poisson iterations
MLPoissonMaxIterations=5
#cluster window / ps
clusterWindow=40000
#coincidence window / ps
coincidenceWindow=10000
#method for the anger algorithm. possible values: allChannels, mainPixAndNeighborPixels, mainPixAndNeighborDies/onlyNeighbors, circleAroundMainHit, sameQuadrant, mainPixAndDirectNeighborPixels, mainPixAndAutoNeighborPixels
angerMethod=mainPixAndNeighborDies
#if anger mehtod is circleAroundMainHit then this defines the radius around the main hit:
angerMethod\angerRadius=10.
#use the following method to identify the crystal: angerMap (default, if ommited), oneToOneCoupling
crystalIdentificationMethod=angerMap
#use a simple logarithmic saturation correction
photonCountCorrection=saturation_log
#apply the pixel gain if it has been calibrated
usePixelGain=true
#photon counts used for energy calculation. possible values: allChannels, mainAndNeighborPixels/onlyNeighbors, mainAndAutoNeighborDiesSum, mainAndNeighborDies, mainAndDirectNeighborDies, mainDie, mainPix, mlPhotonSum
energyCalculationMethod=mainAndNeighborDies

#cluster filter definitions: you can define cluster filters at different stages of the processing chain
#  -there are cluster filters used only for plots which do not influence the processing at all
#   these filters are bound to a certain plot in the main.cc
#   /clusterPlots - the standard filter used for clusterPlots using a filter
#   /clusterPlots/[subIndex] - atm only index 0 is used for a filter without an anergy window
#  -/beforeCrystalIdentification - can be used for a fast photon cut (no neighbor information!!!! or energy is available !!!!!!)
#  -/clusterFile - is only used directly before piping clusters into the cluster binary file per tile, the beforeCrystalIdentification  has already been applied
#  -/beforeCoincSearch - is applied before searching for coincidences, this may influence the random rate, if you filter before the coinc search as you may have a triple which looses one cluster
#  -/coincSearch - is applied to coincident clusters, if no filter is applied before the coinc search one can reject all multi events
#
#possible filter settings (the /beforeCrystalIdentification does only support the photon cuts !!!!):
#  name: string with name
#  minPhotons, maxPhotons: integer values
#  minEnergy, maxEnergy: floating point values
#  neighborFilter: filter on the presence of the neighboring pixels of the main pixel; string value: none, directNeighbors, diagonalNeighbors, allNeighbors
#  minMainPixRatio: the minimal rewuired ratio of the photon value in the main pixel to the total number of photons in a cluster; floating point value [0., 1.]
#  maxAngerSigma: maximal distance of a cluster to the nearest crystal anger position in terms of sigma; floating point value e.g. 3.

#clusterPlots: these are used for cluster plots and do not influence the processing, the mapping to plots is hardcoded in the main.cc!!
clusterFilter/clusterPlots/name="standard"
clusterFilter/clusterPlots/minPhotons=500
clusterFilter/clusterPlots/maxPhotons=3000
clusterFilter/clusterPlots/minEnergy=411
clusterFilter/clusterPlots/maxEnergy=561
clusterFilter/clusterPlots/neighborFilter=allNeighbors
clusterFilter/clusterPlots/0/name="noEnergy"
clusterFilter/clusterPlots/0/minPhotons=500
clusterFilter/clusterPlots/0/maxPhotons=3000
clusterFilter/clusterPlots/0/neighborFilter=allNeighbors
#beforeCrystalIdentification
clusterFilter/beforeCrystalIdentification/name="beforeCrystalIdentification"
#clusterFilter/beforeCrystalIdentification/minPhotons=1000
#clusterFile
clusterFilter/clusterFile/name="clusterFile"
clusterFilter/clusterFile/minPhotons=500
clusterFilter/clusterFile/maxPhotons=3000
clusterFilter/clusterFile/neighborFilter=allNeighbors
#beforeCoincSearch: this filte ris applied BEFORE the clusters are processed by the coincidence finder
clusterFilter/beforeCoincSearch/name="beforeCoincSearch"
clusterFilter/beforeCoincSearch/minPhotons=500
clusterFilter/beforeCoincSearch/maxPhotons=3000
clusterFilter/beforeCoincSearch/minEnergy=411
clusterFilter/beforeCoincSearch/maxEnergy=561
clusterFilter/beforeCoincSearch/neighborFilter=allNeighbors
#filter for coincidences: minTiles, maxTiles, minLORLength (/ mm)
coincidenceFilter/minTiles=2
coincidenceFilter/maxTiles=2
coincidenceFilter/minLORLength=180
#coincSearch: this filter is applied after the coincidence search to every cluster of a valid coincidence.
#             You only need to implement stricter filters than the filter vefore search, beacause all clusters must have already passed the prviously applied cluster filter
clusterFilter/coincSearch/name="afterCoincSearch"

